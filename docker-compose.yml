services:
  postgres:
    image: postgres:14
    container_name: postgres
    environment:
      POSTGRES_USER: yabudu
      POSTGRES_PASSWORD: yabudu
      POSTGRES_DB: diplom
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - dev-network
    restart: always

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: backend
    env_file:
      - ./backend/.env.production
      - ./backend/.env.development
    volumes:
      - ./backend/uploads:/app/uploads:rw
    networks:
      - dev-network
    depends_on:
      - postgres
    command: /bin/sh -c "npx prisma generate && yarn db:push-prod && yarn start:prod"
    ports:
      - "4200:4200"
    restart: always

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: frontend
    env_file:
      - ./frontend/.env.development
      - ./frontend/.env.production
    networks:
      - dev-network
    depends_on:
      - backend
    restart: always

  webapp:
    build:
      context: ./webapp
      dockerfile: Dockerfile
    container_name: webapp
    env_file:
      - ./webapp/.env.development
      - ./webapp/.env.production
    networks:
      - dev-network
    depends_on:
      - backend
    restart: always

  nginx:
    image: nginx:latest
    container_name: nginx
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl
      - ./backend/uploads:/var/www/uploads:ro
      - ./logs:/var/log/nginx
      # - ./nginx/certbot-www:/var/www/certbot
    ports:
      - "80:80"
      - "443:443"
    networks:
      - dev-network
    depends_on:
      - frontend
      - backend
    restart: always

  init-uploads:
    image: busybox
    command: /bin/sh -c "mkdir -p /uploads && chown -R 1000:1000 /uploads && chmod -R 755 /uploads"
    volumes:
      - ./backend/uploads:/uploads

networks:
  dev-network:
    driver: bridge

volumes:
  postgres_data: